### Environment Variables
@baseUrl = http://localhost:3000
@authToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2ZmYjE2YzNhYThiZmM0OWE1ZGQxZjciLCJ1c2VySWQiOiJVU1ItMDAwMDkiLCJlbWFpbCI6Im9sd2FsZ2VvcmdlMTVAZ21haWwuY29tIiwicm9sZSI6IlVTRVIiLCJ1c2VybmFtZSI6Impha29tIiwidmVyc2lvbiI6NywiaWF0IjoxNzQ0ODczMzgzLCJleHAiOjE3NDQ5NTk3ODN9.wmfjYnQ6DhH58infZe13W1f14vYBfx_vE0Yq8acw7HI

### Get all users (admin only)
GET {{baseUrl}}/users
Authorization: Bearer {{authToken}}

### Get user by ID
GET {{baseUrl}}/users/64f5a7b3c5dc0d34f85d969e
Authorization: Bearer {{authToken}}

### Get current user profile
GET {{baseUrl}}/users/profile
Authorization: Bearer {{authToken}}

### Update user profile
PUT {{baseUrl}}/users/profile
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "fullName": "Updated Name",
  "avatar": "https://example.com/new-avatar.jpg",
  "phone": "1234567890"
}

### Change user password
PUT {{baseUrl}}/users/password
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "currentPassword": "Password123!",
  "newPassword": "NewPassword456!",
  "confirmPassword": "NewPassword456!"
}

### Create a new user (admin only)
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "username": "newuser",
  "email": "newuser@example.com",
  "password": "Password123!",
  "fullName": "New User",
  "role": "USER"
}

### Update user by ID (admin only)
PUT {{baseUrl}}/users/64f5a7b3c5dc0d34f85d969e
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "fullName": "Updated User",
  "role": "MANAGER",
  "status": "ACTIVE"
}

### Delete user by ID (admin only)
DELETE {{baseUrl}}/users/64f5a7b3c5dc0d34f85d969e
Authorization: Bearer {{authToken}}

### Search users (admin only)
GET {{baseUrl}}/users/search?query=john&role=MANAGER&status=ACTIVE&limit=10&page=1
Authorization: Bearer {{authToken}}

### Superadmin Login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "admin@inventory-system.com",
  "password": "SuperAdmin123!"
}

### Use the superadmin token for admin operations (replace with token from login response)
@superAdminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2ODAwYWRlZDcwNzc3N2Q1YTY5ZTI2NzAiLCJ1c2VySWQiOiJVU1ItMDAwMTAiLCJlbWFpbCI6ImFkbWluQGludmVudG9yeS1zeXN0ZW0uY29tIiwicm9sZSI6IlNVUEVSQURNSU4iLCJ1c2VybmFtZSI6InN5c3RlbWFkbWluIiwidmVyc2lvbiI6MSwiaWF0IjoxNzQ0ODc2MzAwLCJleHAiOjE3NDQ5NjI3MDB9.mAWZJvNbXr1MC0uZLIcpK3iXS7mAtlnNb4SdX_f8oyY

### Get all users with superadmin privileges 
GET {{baseUrl}}/users
Authorization: Bearer {{superAdminToken}}

### Get users by role (accessible by superadmin)
GET {{baseUrl}}/users/role/ADMIN
Authorization: Bearer {{superAdminToken}}
