### Environment Variables
@baseUrl = http://localhost:3000
@authToken =eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2N2ZmN2U4MTc2ZDE1M2ZjNGViOTI1OWIiLCJ1c2VySWQiOiJVU1ItMDAwMDgiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJyb2xlIjoiVVNFUiIsInVzZXJuYW1lIjoidGVzdHVzZXIiLCJpYXQiOjE3NDQ4MDE3ODQsImV4cCI6MTc0NDg4ODE4NH0.8E4cX2yRk3VWGh8d0x_fZlQPlXNPCq6G7bEuJ7qRZ78

### Register a new user
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  
  "username": "testuser",
  "email": "test@example.com",
  "password": "Password123!",
  "fullName": "Test User"
}

### Login with username and password
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "Password123!"
}

### Get JWT token (for OAuth authenticated users)
GET {{baseUrl}}/auth/token
Authorization: Bearer {{authToken}}

### Logout (invalidate token)
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{authToken}}

### GitHub OAuth authentication (opens browser)
# GET {{baseUrl}}/auth/github

### GitHub OAuth callback URL
# This is handled by the server - just for documentation
# GET {{baseUrl}}/auth/github/callback

### Verify token validity
GET {{baseUrl}}/auth/verify
Authorization: Bearer {{authToken}}

### Refresh token (if implemented)
POST {{baseUrl}}/auth/refresh-token
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "refreshToken": "your_refresh_token_here"
}

### Password reset request
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
  "email": "test@example.com"
}

### Password reset with token
POST {{baseUrl}}/auth/reset-password
Content-Type: application/json

{
  "token": "password_reset_token_here",
  "password": "NewPassword456!",
  "confirmPassword": "NewPassword456!"
}
### Get current user profile
GET {{baseUrl}}/users/profile
Authorization: Bearer {{authToken}}
