### Environment Variables
@baseUrl = http://localhost:3000
@regularUserEmail = olwalgeorge15@gmail.com
@regularUserPassword = Password123!
@adminEmail = newadmin@example.com
@adminPassword = AdminPass123!
@managerEmail = newmanager@example.com
@managerPassword = ManagerPass123!
@supervisorEmail = newsupervisor@example.com
@supervisorPassword = SupervisorPass123!
@superAdminEmail = admin@inventory-system.com
@superAdminPassword = SuperAdmin123!

### =============================================
### AUTHENTICATION - Get tokens for different roles
### =============================================

### Login as Regular User
# @name loginRegularUser
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{regularUserEmail}}",
  "password": "{{regularUserPassword}}"
}

### Extract Regular User Token
@regularUserToken = {{loginRegularUser.response.body.data.token}}

### Login as Admin
# @name loginAdmin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{adminEmail}}",
  "password": "{{adminPassword}}"
}

### Extract Admin Token
@adminToken = {{loginAdmin.response.body.data.token}}

### Login as Manager
# @name loginManager
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{managerEmail}}",
  "password": "{{managerPassword}}"
}

### Extract Manager Token
@managerToken = {{loginManager.response.body.data.token}}

### Login as Supervisor
# @name loginSupervisor
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{supervisorEmail}}",
  "password": "{{supervisorPassword}}"
}

### Extract Supervisor Token
@supervisorToken = {{loginSupervisor.response.body.data.token}}

### Login as SuperAdmin
# @name loginSuperAdmin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "{{superAdminEmail}}",
  "password": "{{superAdminPassword}}"
}

### Extract SuperAdmin Token
@superAdminToken = {{loginSuperAdmin.response.body.data.token}}

### =============================================
### REGULAR USER OPERATIONS
### =============================================

### Get Own Profile (Regular User - jakom)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{regularUserToken}}

### Update Own Profile (Regular User)
PUT {{baseUrl}}/users/profile
Content-Type: application/json
Authorization: Bearer {{regularUserToken}}

{
  "fullName": "Jakom Updated"
}

### Try to Access Admin-only Endpoint (Regular User) - Should Fail
GET {{baseUrl}}/users
Authorization: Bearer {{regularUserToken}}

### =============================================
### SUPERVISOR OPERATIONS
### =============================================

### Get Own Profile (Supervisor)
GET {{baseUrl}}/users/profile
Authorization: Bearer {{supervisorToken}}

### Try to Access User Data with limited permissions
GET {{baseUrl}}/users/userID/USR-00009
Authorization: Bearer {{supervisorToken}}

### Try to Access All Users (Should have limited access)
GET {{baseUrl}}/users
Authorization: Bearer {{supervisorToken}}

### =============================================
### MANAGER OPERATIONS
### =============================================

### Get All Users (Manager)
GET {{baseUrl}}/users
Authorization: Bearer {{managerToken}}

### Search Users (Manager)
GET {{baseUrl}}/users/search?term=jakom
Authorization: Bearer {{managerToken}}

### Get User by Username (Manager)
GET {{baseUrl}}/users/username/jakom
Authorization: Bearer {{managerToken}}

### Get User by ID (Manager)
GET {{baseUrl}}/users/67ffb16c3aa8bfc49a5dd1f7
Authorization: Bearer {{managerToken}}

### Try to Create User (Manager) - Should Fail
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{managerToken}}

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "NewPassword123!",
  "fullName": "Test User",
  "role": "USER"
}

### =============================================
### ADMIN OPERATIONS
### =============================================

### Get All Users (Admin)
GET {{baseUrl}}/users
Authorization: Bearer {{adminToken}}

### Get Users by Role (Admin)
GET {{baseUrl}}/users/role/USER
Authorization: Bearer {{adminToken}}

### Get Users by Role - Supervisor (Admin)
GET {{baseUrl}}/users/role/SUPERVISOR
Authorization: Bearer {{adminToken}}

### Create New User (Admin)
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "username": "newtestuser",
  "email": "newtest@example.com",
  "password": "NewPassword123!",
  "fullName": "New Test User",
  "role": "USER"
}

### Update User (Admin) - jakom
PUT {{baseUrl}}/users/67ffb16c3aa8bfc49a5dd1f7
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "fullName": "Jakom Updated By Admin",
  "role": "USER",
  "isActive": true
}

### Get User Pagination - Page 2
GET {{baseUrl}}/users?page=2&limit=10
Authorization: Bearer {{adminToken}}

### =============================================
### SUPERADMIN OPERATIONS
### =============================================

### Get All Users (SuperAdmin)
GET {{baseUrl}}/users
Authorization: Bearer {{superAdminToken}}

### Create New Admin User (SuperAdmin)
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{superAdminToken}}

{
  "username": "newadmin2",
  "email": "newadmin2@example.com",
  "password": "AdminPass123!",
  "fullName": "New Admin 2",
  "role": "ADMIN"
}

### Create New Supervisor (SuperAdmin)
POST {{baseUrl}}/users
Content-Type: application/json
Authorization: Bearer {{superAdminToken}}

{
  "username": "newsupervisor2",
  "email": "newsupervisor2@example.com",
  "password": "SupervisorPass123!",
  "fullName": "New Supervisor 2",
  "role": "SUPERVISOR"
}

### Get Users by Role - Find Managers (SuperAdmin)
GET {{baseUrl}}/users/role/MANAGER
Authorization: Bearer {{superAdminToken}}

### Search Users (SuperAdmin)
GET {{baseUrl}}/users/search?term=new
Authorization: Bearer {{superAdminToken}}

### Get User by ID (SuperAdmin) - benkipchoge
GET {{baseUrl}}/users/67fe328ec5f008d6579a6eb4
Authorization: Bearer {{superAdminToken}}

### Delete User (SuperAdmin) - Use with caution
# Replace with actual user ID to delete
DELETE {{baseUrl}}/users/USER_ID_TO_DELETE
Authorization: Bearer {{superAdminToken}}

### Delete All Users (SuperAdmin) - DANGER!
# Uncomment to test but use with extreme caution
# DELETE {{baseUrl}}/users
# Authorization: Bearer {{superAdminToken}}
