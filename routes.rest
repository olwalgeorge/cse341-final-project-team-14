### Register User
POST http://localhost:3000/auth/register
Content-Type: application/json

{
  "fullName": "Ben Omondi",
  "username": "ben",
  "password": "Ben1234!",
  "email": "ben@example.com"
}


### Login User
POST http://localhost:3000/auth/login
Content-Type: application/json

{
   "password": "SuperAdmin1234!",
  "email": "omondi@example.com" 
}

### Get User Profile (Requires Authentication)
GET http://localhost:3000/users/profile
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Update User Profile (Requires Authentication)
PUT http://localhost:3000/users/profile 
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "fullName": "Super Admin",
  
  "password": "SuperAdmin1234!",
  "email": "superadmin@example.com" 
}

### Logout User (Requires Authentication)
POST http://localhost:3000/auth/logout
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get All Users (Requires Authentication)
GET http://localhost:3000/users
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get User By ID (Requires Authentication)
GET http://localhost:3000/users/userID/SM-00001
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Delete User By ID (Requires Authentication)
DELETE http://localhost:3000/users/67ed48c7bc4cde6b1
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get User By Username (Requires Authentication)
GET http://localhost:3000/users/username/
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get User By Email (Requires Authentication)
GET http://localhost:3000/users/email/superadmin@example.com
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Users By Role (Requires Authentication)
GET http://localhost:3000/users/role/ADMIN
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Delete All Users (Requires Authentication)
DELETE http://localhost:3000/users
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Update User By ID (Requires Authentication)
PUT http://localhost:3000/users/67ed48c7b
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
 "fullName": "Super Admin",
 "role": "SUPERADMIN"
}

### PRODUCT ROUTES ###

### Get All Products
GET http://localhost:3000/products

### Get Products with Filtering
GET http://localhost:3000/products?category=Electronics&minPrice=100&maxPrice=1000&inStock=true&page=1&limit=10

### Search Products
GET http://localhost:3000/products/search?term=laptop

### Get Product by MongoDB ID
GET http://localhost:3000/products/65fb123abc456d789e

### Get Product by Product ID
GET http://localhost:3000/products/productID/PR-00001

### Get Products by Category
GET http://localhost:3000/products/category/Electronics

### Get Products by Supplier
GET http://localhost:3000/products/supplier/67f2e07fbf6d0457367

### Create New Product (Requires Authentication)
POST http://localhost:3000/products
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "name": "MacBook Pro M3",
  "description": "Latest MacBook Pro with M3 chip",
  "price": 1999.99,
  "quantity": 10,
  "category": "Electronics",
  "supplier": "67f66c737ed7ddb60e54af6f",
  "sku": "APPL123456"
}

### Update Product (Requires Authentication)
PUT http://localhost:3000/products/65fb123abc456d789e012345
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "name": "MacBook Pro M3 Pro",
  "price": 2199.99,
  "quantity": 8
}

### Delete Product (Requires Authentication)
DELETE http://localhost:3000/products/65fb123abc456d789e012345
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### ORDER ROUTES ###

### Get All Orders (Requires Authentication)
GET http://localhost:3000/orders
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Orders with Filtering (Requires Authentication)
GET http://localhost:3000/orders?status=pending&fromDate=2023-01-01&toDate=2023-12-31&page=1&limit=10
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Order by MongoDB ID (Requires Authentication)
GET http://localhost:3000/orders/65fb123abc456d789e012347
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Order by Order ID (Requires Authentication)
GET http://localhost:3000/orders/orderID/OR-00001
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Orders by Customer (Requires Authentication)
GET http://localhost:3000/orders/customer/65fb123abc456d789e012348
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Orders by Status (Requires Authentication)
GET http://localhost:3000/orders/status/pending
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Create New Order (Requires Authentication)
POST http://localhost:3000/orders
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "customer": "65fb123abc456d789e012348",
  "items": [
    {
      "product": "65fb123abc456d789e012345",
      "quantity": 2,
      "price": 1999.99
    }
  ],
  "shippingAddress": {
    "street": "123 Main St",
    "city": "San Francisco",
    "state": "CA",
    "postalCode": "94107",
    "country": "USA"
  },
  "status": "pending"
}

### Update Order (Requires Authentication)
PUT http://localhost:3000/orders/65fb123abc456d789e012347
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "status": "shipped",
  "items": [
    {
      "product": "65fb123abc456d789e012345",
      "quantity": 3,
      "price": 1999.99
    }
  ]
}

### Delete Order (Requires Authentication)
DELETE http://localhost:3000/orders/65fb123abc456d789e012347
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Delete All Orders (Requires Authentication)
DELETE http://localhost:3000/orders
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### SUPPLIER ROUTES ###

### Get All Suppliers
GET http://localhost:3000/suppliers

### Get Suppliers with Filtering
GET http://localhost:3000/suppliers?name=Tech&country=USA&page=1&limit=10

### Search Suppliers
GET http://localhost:3000/suppliers/search?term=electronics

### Get Supplier by MongoDB ID
GET http://localhost:3000/suppliers/65fb123abc456d789e012346

### Get Supplier by Supplier ID
GET http://localhost:3000/suppliers/supplierID/SP-00001

### Create New Supplier (Requires Authentication)
POST http://localhost:3000/suppliers
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "name": "Electronics Inc.",
  "contact": {
    "phone": "1112223333",
    "email": "contact@electronicsinc.com"
  },
  "address": {
    "street": "456 Electronics Drive",
    "city": "New York",
    "state": "NY",
    "postalCode": "10001",
    "country": "USA"
  }
}

### Update Supplier (Requires Authentication)
PUT http://localhost:3000/suppliers/65fb123abc456d789e012346
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "name": "TechSupply Corporation",
  "contact": {
    "phone": "9876543210"
  }
}

### Delete Supplier (Requires Authentication)
DELETE http://localhost:3000/suppliers/65fb123abc456d789e012346
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Delete All Suppliers (Requires Authentication)
DELETE http://localhost:3000/suppliers
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### CUSTOMER ROUTES ###

### Get All Customers (Requires Authentication)
GET http://localhost:3000/customers
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Customers with Filtering (Requires Authentication)
GET http://localhost:3000/customers?name=John&page=1&limit=10
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Search Customers (Requires Authentication)
GET http://localhost:3000/customers/search?term=john
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Customer by MongoDB ID (Requires Authentication)
GET http://localhost:3000/customers/67f67b829d34cfbe039e94be
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Customer by Customer ID (Requires Authentication)
GET http://localhost:3000/customers/customerID/CU-00001
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Customer by Email (Requires Authentication)
GET http://localhost:3000/customers/email/john.doe@example.com
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Create New Customer (Requires Authentication)
POST http://localhost:3000/customers
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "name": "George Doe",
  "email": "george.doe@example.com",
  "phone": "1112223333",
  "address": {
    "street": "456 Elm St",
    "city": "Othertown",
    "state": "TX",
    "postalCode": "67890",
    "country": "USA"
  }
}

### Update Customer (Requires Authentication)
PUT http://localhost:3000/customers/65fb123abc456d789e012349
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "name": "John M. Doe",
  "phone": "9876543210"
}

### Delete Customer (Requires Authentication)
DELETE http://localhost:3000/customers/65fb123abc456d789e012349
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Delete All Customers (Requires Authentication)
DELETE http://localhost:3000/customers
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### PURCHASE ROUTES ###

### Get All Purchases (Requires Authentication)
GET http://localhost:3000/purchases
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Purchases with Filtering (Requires Authentication)
GET http://localhost:3000/purchases?status=ordered&fromDate=2023-01-01&toDate=2023-12-31&page=1&limit=10
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Purchase by MongoDB ID (Requires Authentication)
GET http://localhost:3000/purchases/65fb123abc456d789e012350
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Purchase by Purchase ID (Requires Authentication)
GET http://localhost:3000/purchases/purchaseID/PU-00001
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Purchases by Supplier (Requires Authentication)
GET http://localhost:3000/purchases/supplier/65fb123abc456d789e012346
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Get Purchases by Status (Requires Authentication)
GET http://localhost:3000/purchases/status/ordered
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Create New Purchase (Requires Authentication)
POST http://localhost:3000/purchases
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "supplier": "65fb123abc456d789e012346",
  "items": [
    {
      "product": "65fb123abc456d789e012345",
      "quantity": 5,
      "price": 1800.00
    }
  ],
  "totalAmount": 9000.00,
  "purchaseDate": "2023-05-15T10:00:00Z",
  "status": "ordered",
  "paymentStatus": "unpaid",
  "paymentDue": "2023-06-15T10:00:00Z",
  "notes": "Bulk purchase of laptops for inventory"
}

### Update Purchase (Requires Authentication)
PUT http://localhost:3000/purchases/65fb123abc456d789e012350
Content-Type: application/json
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

{
  "status": "received",
  "paymentStatus": "paid"
}

### Delete Purchase (Requires Authentication)
DELETE http://localhost:3000/purchases/65fb123abc456d789e012350
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

### Delete All Purchases (Requires Authentication)
DELETE http://localhost:3000/purchases
Authorization: Bearer YOUR_ACCESS_TOKEN  # Replace YOUR_ACCESS_TOKEN

